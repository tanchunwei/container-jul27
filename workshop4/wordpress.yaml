---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wp-cm
  labels:
    app: wordpress
data:
  WORDPRESS_DB_HOST: wpdb-cluster-mysql.wp.svc.cluster.local
  WORDPRESS_DB_USER: root

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: wp-pvc
  labels: 
    app: wordpress
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: dobs.csi.digitalocean.com
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: do-block-storage
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wp-deploy
  labels:
    app: wordpress
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: wp-pod
  template: 
    metadata:
      name: wp-pod
      labels: 
        app: wp-pod
    spec:
      volumes:
      - name: wp-vol
        persistentVolumeClaim: 
          claimName: wp-pvc
      containers:
      - name: wp-container
        image: wordpress
        imagePullPolicy: IfNotPresent
        env:
        - name: WORDPRESS_DB_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: wp-secret
              key: ROOT_PASSWORD
        envFrom:
          - configMapRef: 
              name: wp-cm
        ports:
        - name: wp-port
          containerPort: 80
        volumeMounts:
        - name: wp-vol
          mountPath: /var/www/html

---
apiVersion: v1
kind: Service
metadata: 
  name: wp-svc
  labels:
    app: wordpress
spec:
  type: ClusterIP
  selector:
    app: wp-pod
  ports:
  - port: 8080
    targetPort: wp-port

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: wp-ing
  labels:
    app: wordpress
  annotations:
    nginx.ingress.kubernetes.io/limit-rps: "5"
spec:
  ingressClassName: nginx
  rules: 
  - host: acme.167.172.6.251.nip.io
    http: 
      paths:
      - path: /
        backend: 
          serviceName: wp-svc
          servicePort: 8080